# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'petcareandcure' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false
  )

  installer.pods_project.targets.each do |target|
    if ['hermes', 'hermes-engine'].include?(target.name)
      target.build_configurations.each do |config|
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        config.build_settings['GCC_GENERATE_DEBUGGING_SYMBOLS'] = 'YES'
        config.build_settings['DWARF_DSYM_FILE_NAME'] = 'hermes.framework.dSYM'
        config.build_settings['DWARF_DSYM_FILE_SHOULD_ACCOMPANY_PRODUCT'] = 'YES'
      end
    end

    if ['glog', 'glog-glog_privacy', 'fmt', 'hermes-engine', 'hermes'].include?(target.name)
      target.build_phases.each do |phase|
        if phase.respond_to?(:name) && phase.name.to_s.include?('[CP-User]')
          puts "ðŸ”§ Removing buggy build phase from #{target.name}"
          target.build_phases.delete(phase)
        end
      end
    end
  end
end
end

